#include <dummy.h>

/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/97fc0c47-9106-4a95-a9b1-bbf57d836ae9 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int water_level;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#define ALRAM_GPIO  4   //labled as D2
#define BEEP_ON digitalWrite(ALRAM_GPIO, HIGH)
#define BEEP_OFF   digitalWrite(ALRAM_GPIO, LOW)

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  //a short beep at startup
  pinMode(ALRAM_GPIO, OUTPUT);
  BEEP_ON;
  delay(100);
  BEEP_OFF;
}


const int ADC_pin = A0; // Define the ADC pin
int normal_mode = 1;

void loop() {
  ArduinoCloud.update();
  // Your code here 
  water_level = analogRead(ADC_pin); // Read the analog value
  Serial.print("ADC Value: ");
  Serial.println(water_level); // Print the value to Serial Monitor

  normal_mode = water_level < 80;

  if (normal_mode)
    delay(1000); // Delay for readability
  else {
    Serial.println("ALARM!!!");
    BEEP_ON;
    delay(500);
    BEEP_OFF;
    delay(500);
  }
}
